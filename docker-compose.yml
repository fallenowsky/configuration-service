version: '3.8'

services:
  currency-provider-service:
    build: ../currency-provider
    container_name: currency-provider
    environment:
      RABBIT_ADDRESSES: rabbitmq:5672
      RABBIT_USERNAME: guest
      RABBIT_PASSWORD: guest
      APP_PORT: 8081
    ports:
      - "8081:8081"
    networks:
      - micro_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: "exit 0"

  currency-persistence-service:
    build: ../currency-persistence-service
    container_name: currency-persistence-service
    environment:
      RABBIT_ADDRESSES: rabbitmq:5672
      RABBIT_USERNAME: guest
      RABBIT_PASSWORD: guest
      MYSQL_ADDRESSES: database:3306
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: rates
      APP_PORT: 8082
    ports:
      - "8082:8082"
    depends_on:
      database:
        condition: service_healthy
      currency-provider-service:
        condition: service_healthy
    restart: always
    networks:
      - micro_network
    healthcheck:
      test: "exit 0"

  currency-exchange-service:
    build: ../exchange-api-service
    container_name: currency-exchange-service
    ports:
      - "8083:8083"
    restart: always
    environment:
      RABBIT_ADDRESSES: rabbitmq:5672
      RABBIT_USERNAME: guest
      RABBIT_PASSWORD: guest
      MYSQL_ADDRESSES: database:3306
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: rates
      KEYCLOAK_ADDRESSES: keycloak:8080
      APP_PORT: 8083
    depends_on:
      currency-persistence-service:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - micro_network
    healthcheck:
      test: "exit 0"

  currency-mail-service:
    build: ../mail-service
    container_name: currency-mail-service
    ports:
      - "8084:8084"
    environment:
      RABBIT_ADDRESSES: rabbitmq:5672
      RABBIT_USERNAME: guest
      RABBIT_PASSWORD: guest
      APP_PORT: 8084
    depends_on:
      currency-exchange-service:
        condition: service_healthy
    restart: always
    networks:
      - micro_network

  database:
    image: mysql:latest
    container_name: database
    environment:
      MYSQL_DATABASE: rates
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    networks:
      - micro_network
    healthcheck:
      test: "exit 0"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - micro_network
    healthcheck:
      test: "exit 0"

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    restart: always
    command: start-dev
    container_name: keycloak
    environment:
      DB_PORT: 5436
      KC_DB: postgres
      KC_DB_URL_HOST: postgres-keycloak
      KC_DB_URL_DATABASE: keycloak
      KC_DB_PASSWORD: password
      KC_DB_USERNAME: keycloak
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_STATISTICS: all
      KEYCLOAK_LOGLEVEL: DEBUG
    ports:
      - "8080:8080"
    networks:
      - micro_network
    depends_on:
      postgres-keycloak:
        condition: service_healthy
    healthcheck:
      test: "exit 0"

  postgres-keycloak:
    image: postgres:14.2
    container_name: postgres-keycloak
    restart: always
    volumes:
      - keycloak_postgresql:/var/lib/postgresql
      - keycloak_postgresql_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - "5436:5436"
    networks:
      - micro_network
    healthcheck:
      test: "exit 0"

  php-my-admin:
    image: phpmyadmin
    container_name: php-my-admin
    ports:
      - "8090:80"
    environment:
      PMA_ARBITRARY: 1
    networks:
      - micro_network

volumes:
  keycloak_postgresql:
  keycloak_postgresql_data:

networks:
  micro_network:
    driver: bridge

